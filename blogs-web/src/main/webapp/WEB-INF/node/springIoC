Inversion of Control
springIoC:是spring框架的核心，贯穿始终。所谓的IoC，对于spring框架来说，就是由spring来控制对象的创建，生命周期和对象间的关系。
		相比于传统的程序开发，手动创建new一个对象，或者从JDNI中获取一个对象，使用完成后，如果需要，还要手动的销毁对象。
		这样对象就会始终和其他的接口或者类耦合起来。
		而对于spring来说，他会在程序运行到适当的时候，把需要的东西给你，同时也会把你交给其他需要的地方。所有的类的创建，销毁都有spring来控制
		也就是说控制对象生存周期的不再是他的引用对象，而是spirng容器。
		对于某个具体的对象而言，以前是他控制其他对象，现在是所有的对象都被spring控制
		所以这叫控制反转
Dependency Injection
		springIoC的其中一个重点就是在程序运行过程中，能够动态的向某个对象提供他所需要的其他对象，这一点是通过DI（依赖注入）来实现的
		在程序中，我们仅仅只需要告诉spring某个对象的依赖对象，那么spring容器就会在适当的时候，将所需要的对象注入进去
		这样就完成了各个对象之间的关系控制。